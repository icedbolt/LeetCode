class Solution:
  def bstFromPreorder(self, preorder: List[int]) -> Optional[TreeNode]:
      root = TreeNode(preorder[0])

      for i in range(1, len(preorder)):
          self.insert(root, preorder[i])
      return root

  def insert(self, root: TreeNode, n: int) -> TreeNode:
      # Base case
      if not root:
          return TreeNode(n)
      if root.val > n:
          root.left = self.insert(root.left, n)       # root.left will be set to the new node created as per the base case.
      else:
          root.right = self.insert(root.right, n);
      return root
# T = O(n) 
-------------------------------------------------------------------------------------------------------------------
