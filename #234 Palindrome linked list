def isPalindrome(self, head: [NodeList]) -> bool:
  # using an array
  nums = []
  while head:
    nums.append(head.val)
    head = head.next

  l, r = 0, len(nums)-1
  while l <= r:
    if nums[l] != nums[r]:
      return False
    l += 1
    r -= 1
  return True
-----------------------------------------------------------------------
# using two pointers (slow & fast) & partial reversing the linked list. O(1) - space
fast = head
slow = head

#find middle (slow)
while fast and fast.next:
  fast = fast.next.next
  slow = slow.next

#reversing the second half
prev = None
while slow:
  temp = slow.next
  slow.next = prev
  prev = slow
  slow = temp

#check for palindrome
left, right = head, slow
while right:
  if left.val != right.val:
    return False
  left = left.next
  right = right.next
return True
