class Solution:
    def longestSubarray(self, nums: List[int], limit: int) -> int:
        res = 0
        j = 0
        maxQ = collections.deque([])
        minQ = collections.deque([])
        for i in range(len(nums)):
            while minQ and minQ[-1] > nums[i]:
                minQ.pop()
            minQ.append(nums[i])

            while maxQ and maxQ[-1] < nums[i]:
                maxQ.pop()
            maxQ.append(nums[i])

            if maxQ[0] - minQ[0] <= limit:
                res =  max(res, i - j + 1)
            else:                                  # Move the left boundary (j) forward to shrink the subarray until it becomes valid again.
                if minQ[0] == nums[j]:
                    minQ.popleft()
                if maxQ[0] == nums[j]:
                    maxQ.popleft()
                j += 1
        return res
