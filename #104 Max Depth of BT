def maxDepth(self, root: TreeNode()) -> int:
  if not root:
    return 0

  #recursive DFS
  return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))

---------------------------------------------------------------------------------

if not root:
  return 0

#iterative DFS
stack = [[root, 1]]
res = 1
while stack:
  node, depth = stack.pop()
  
  if node:
    res = max(res, depth)
    stack.append(node.left, depth + 1)
    stack.append(node.right, depth + 1)
return res
