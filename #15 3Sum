def threesum(self, nums: List[int]) -> List[List[int]]:
    res = set()
    n, p, z = [], [], []
    
    for num in nums:
        if num > 0:
            p.append(num)
        elif num < 0:
            n.append(num)
        else:
            z.append(num)
    N, P = set(n), set(p)
    
    if z:                                           #checking for +ve & -ve numbers in case of a 0.
        for num in P:
            if -1*num in N:
                res.add((-1*num, 0, num))
                
    if len(z) >= 3:
        res.add((0, 0, 0))
        
    for i in range(len(n)):                         #checking for all pair of -ve numbers(-1, -2), if there is a +ve compliment(3).
        for j in range(i+1, len(n)):
            target = -1*(n[i]+n[j])
            if target in P:
                res.add(tuple(sorted([target, n[i], n[j]])))
                
    for i in range(len(p)):                         #checking for all pair of +ve numbers(1, 2), if there is a -ve compliment(-3).
        for j in range(i+1, len(p)):
            target = -1*(p[i]+p[j])
            if  target in N:
                res.add(tuple(sorted([target, p[i], p[j]])))
                
    return res
