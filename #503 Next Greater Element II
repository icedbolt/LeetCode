def nextGreaterElements(self, nums: List[int]) -> List[int]:
    nums2 = nums + nums
    stack = [0]
    res = [-1] * len(nums2)
    for i in range(1, len(nums2)):
        while stack and nums2[i] > nums2[stack[-1]]:
            res[stack[-1]] = nums2[i]
            stack.pop()
        stack.append(i)
    return res[:len(nums)]
----------------------------------------------------------------------------
def nextGreaterElements(self, nums: List[int]) -> List[int]:
    stack = [0]
    n = len(nums)
    res = [-1] * n
    for i in range(1, n * 2):
        while stack and nums[i % n] > nums[stack[-1]]:    # Virtual copy, without using extra space
            res[stack[-1]] = nums[i % n]
            stack.pop()
        stack.append(i % n)
    return res
