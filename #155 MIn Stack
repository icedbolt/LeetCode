class MinStack {
    Stack<Integer> stack = new Stack<>(); 
    int min = Integer.MAX_VALUE;
    public MinStack() {
        
    }
    
    public void push(int val) {
        // push the old minimum value when the current minimum value changes
        if (val <= min) {
            stack.push(min);
            min = val;
        }
        stack.push(val);
        System.out.println(stack);
    }
    
    public void pop() {
        // If pop removes current min, pop twice to change current min to last min value.
        if (stack.pop() == min) {
            min = stack.pop();
        }
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int getMin() {
        return min;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
