class Solution:
    def allPathsSourceTarget(self, graph: List[List[int]]) -> List[List[int]]:
        def dfs(node, path):
            if node == len(graph) -  1:           # If we reached the last node, add the path to the result
                res.append(list(path))
                return
            
            for neighbour in graph[node]:
                path.append(neighbour)
                dfs(neighbour, path)
                path.pop()      # Backtrack to explore other paths
        
        res = []
        dfs(0, [0])    # Start DFS from node 0 with the initial path [0]
        return res
