def isBalanced(self, root: TreeNode()) -> bool:
  def dfs(root):
    if not root:
      return [True, 0]      #Base case - node with no child, [Balanced = True, Height = 0]
    left = dfs(root.left)
    right = dfs(root.right)
    balanced = (left[0] and right[0] and abs(left[1] - right[1]) <= 1)
    return [balanced, 1 + max(left[1], right[1]]      #return bool and height

  return dfs(root)[0]
  
