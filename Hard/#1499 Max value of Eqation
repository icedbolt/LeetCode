# Using heap
def findMaxValueOfEquation(self, points: List[List[int]], k: int) -> int:
    q = []
    res = float('-inf')

    for x, y in points:
        while q and q[0][1] < x - k:
            heapq.heappop(q)
        if q:
            res = max(res, -q[0][0] + y + x)      # Because xi < xj;  yi + yj + |xi - xj| = (yi - xi) + (yj + xj)
        heapq.heappush(q, (x - y, x))          # Here, -(y - x) is stored as negative because Python's heapq is a min-heap by default, so using the negative makes it act like a max-heap.
    return res
