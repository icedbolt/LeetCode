// Java, using HashMap - O(m + n)

class Solution {
    public int numMatchingSubseq(String s, String[] words) {
        int m = s.length(), ans = 0;
        HashMap<String, Integer> mp = new HashMap<>();
        for (String word : words) {
            mp.put(word, mp.getOrDefault(word, 0) + 1);
        }

        for (String word : mp.keySet()) {
            int i = 0, j = 0, n = word.length();
            while (i < m && j < n) {
                if (s.charAt(i) == word.charAt(j)) {
                    j++;
                }
                i++;
            }
            if (j == n) {
                ans += mp.get(word);
            }
        }
        return ans;
    }
}
