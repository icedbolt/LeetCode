def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
    if not head or not head.next:
        return head

    odd = head
    even = head.next
    evenHead = head.next           # Node to which last odd node will point to.
    while even and even.next:      # If even is null, odd is also at the end of LL.
        odd.next = odd.next.next
        even.next = even.next.next

        odd = odd.next
        even = even.next
    
    odd.next = evenHead
    return head
